Index: kernel-impl/src/main/java/org/sakaiproject/authz/impl/DbAuthzGroupService.java
===================================================================
--- kernel-impl/src/main/java/org/sakaiproject/authz/impl/DbAuthzGroupService.java	(revision 100539)
+++ kernel-impl/src/main/java/org/sakaiproject/authz/impl/DbAuthzGroupService.java	(working copy)
@@ -1618,11 +1618,27 @@
 			// Would be better to get this initially to make the code more efficient, but the realms collection
 			// does not have a common order for the site's id which is needed to determine if the session variable exists
 			String roleswap = SecurityService.getUserEffectiveRole(siteRef);
-			
+			Map<String, String[]> delegatedAccessMap = null;
+			//Delegated access essentially behaves like roleswap except instead of just specifying which role, you can also specify
+			//the realm as well.  The access map is populated during login and through the delegatedaccess tool and is stored in the session
+			//attribute: delegatedaccess.accessmap.  This is a map of: SiteRef -> String[]{realmId, roleId}.  Delegated access
+			//will defer to roleswap if it's set.
+			boolean delegatedAccess = false;
+			String[] delegatedAccessGroupAndRole = null;
+			try{
+				delegatedAccessMap = (Map<String, String[]>) sessionManager().getCurrentSession().getAttribute("delegatedaccess.accessmap");
+				if(delegatedAccessMap != null && delegatedAccessMap.containsKey(siteRef)){
+					delegatedAccess = true;
+					delegatedAccessGroupAndRole = delegatedAccessMap.get(siteRef);
+				}
+			}catch (Exception e) {
+				//doesn't exist, don't worry about it
+			}
 			List results = null;
 			
 			// Only check roleswap if the method is being called for the current user
-			if (roleswap != null && userId != null && userId.equals(sessionManager().getCurrentSessionUserId()))
+			if ((roleswap != null || delegatedAccess)
+					&& userId != null && userId.equals(sessionManager().getCurrentSessionUserId()))
             {
 				
 				// First check in the user's own my workspace site realm if it's in the list
@@ -1635,9 +1651,18 @@
 				// Then check the site where there's a roleswap effective
 				
 				Object[] fields2 = new Object[3];
-				fields2[0] = roleswap;
+				if(roleswap != null)
+					fields2[0] = roleswap;
+				else if(delegatedAccess){
+					//set the role for delegated access
+					fields2[0] = delegatedAccessGroupAndRole[1];
+				}
 				fields2[1] = lock;
-				fields2[2] = siteRef;
+				if(roleswap == null && delegatedAccess)
+					//set the realm for delegated access
+					fields2[2] = delegatedAccessGroupAndRole[0];
+				else
+					fields2[2] = siteRef;
 
 				statement = dbAuthzGroupSql.getCountRoleFunctionSql();
 				
@@ -1668,7 +1693,7 @@
 					return true;
 				
 				// Then check the rest of the realms. For example these could be subfolders under /content/group/...
-				
+				if(roleswap != null){
 				for (String realmId : realms)
 				{
 					if (realmId == siteRef || realmId == userSiteRef) // we've already checked these so no need to do it again
@@ -1701,7 +1726,7 @@
 					if (rv) // if true, go ahead and return
 						return true;
 				}
-				
+				}
 				// No successful results for roleswap
 				return false;
             }
